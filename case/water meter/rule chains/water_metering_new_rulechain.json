{
  "ruleChain": {
    "name": "Water Metering Solution Main",
    "type": "CORE",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null,
    "additionalInfo": {
      "description": ""
    }
  },
  "metadata": {
    "version": 1,
    "firstNodeIndex": 5,
    "nodes": [
      {
        "type": "org.thingsboard.rule.engine.profile.TbDeviceProfileNode",
        "name": "Device Profile Node",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "persistAlarmRulesState": false,
          "fetchAlarmRulesStateOnStart": "false"
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 894,
          "layoutY": 152
        }
      },
      {
        "type": "org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode",
        "name": "RPC Call Request",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "timeoutInSeconds": 60
        },
        "additionalInfo": {
          "layoutX": 1657,
          "layoutY": 194
        }
      },
      {
        "type": "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode",
        "name": "Message Type Switch",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "version": 0
        },
        "additionalInfo": {
          "layoutX": 1236,
          "layoutY": 166
        }
      },
      {
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "Save Client Attributes",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "scope": "CLIENT_SCOPE",
          "updateAttributesOnlyOnValueChange": false,
          "notifyDevice": true,
          "sendAttributesUpdatedNotification": false
        },
        "additionalInfo": {
          "layoutX": 1637,
          "layoutY": 51
        }
      },
      {
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Timeseries",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "defaultTTL": 0
        },
        "additionalInfo": {
          "description": null,
          "layoutX": 1643,
          "layoutY": 120
        }
      },
      {
        "type": "org.thingsboard.rule.engine.metadata.CalculateDeltaNode",
        "name": "Calculate Consumption Based on Pulse Counter",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "inputValueKey": "pulseCounter",
          "outputValueKey": "meterReadingDelta",
          "useCache": true,
          "addPeriodBetweenMsgs": false,
          "periodValueKey": "periodInMs",
          "round": 2,
          "tellFailureIfDeltaIsNegative": true,
          "excludeZeroDeltas": false
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 280,
          "layoutY": 149
        }
      },
      {
        "type": "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode",
        "name": "Calculate Weekly Consumption",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "inputValueKey": "meterReadingDelta",
          "outputValueKey": "weeklyConsumption",
          "mathFunction": "SUM",
          "aggIntervalType": "WEEK",
          "timeZoneId": "UTC",
          "aggIntervalValue": 1,
          "aggIntervalTimeUnit": "HOURS",
          "intervalPersistencePolicy": "ON_EACH_MESSAGE",
          "intervalCheckValue": 1,
          "intervalCheckTimeUnit": "MINUTES",
          "statePersistencePolicy": "ON_EACH_CHANGE",
          "statePersistenceValue": 1,
          "statePersistenceTimeUnit": "MINUTES",
          "outMsgType": "POST_TELEMETRY_REQUEST",
          "autoCreateIntervals": false,
          "periodValue": 1,
          "periodTimeUnit": "MINUTES",
          "parentEntitiesQuery": {
            "type": "single",
            "entityId": {
              "entityType": "TENANT",
              "id": "e47343f0-5a68-11eb-a280-b979e84eaa51"
            }
          }
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 1361,
          "layoutY": 746
        }
      },
      {
        "type": "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode",
        "name": "Calculate Weekly Consumption",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "inputValueKey": "meterReadingDelta",
          "outputValueKey": "weeklyConsumption",
          "mathFunction": "SUM",
          "aggIntervalType": "WEEK",
          "timeZoneId": "UTC",
          "aggIntervalValue": 1,
          "aggIntervalTimeUnit": "HOURS",
          "intervalPersistencePolicy": "ON_EACH_MESSAGE",
          "intervalCheckValue": 1,
          "intervalCheckTimeUnit": "MINUTES",
          "statePersistencePolicy": "ON_EACH_CHANGE",
          "statePersistenceValue": 1,
          "statePersistenceTimeUnit": "MINUTES",
          "outMsgType": "POST_TELEMETRY_REQUEST",
          "autoCreateIntervals": false,
          "periodValue": 5,
          "periodTimeUnit": "MINUTES",
          "parentEntitiesQuery": {
            "type": "group",
            "entityGroupId": {
              "entityType": "ENTITY_GROUP",
              "id": "e479ac90-5a68-11eb-a280-b979e84eaa51"
            }
          }
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 1342,
          "layoutY": 604
        }
      },
      {
        "type": "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode",
        "name": "Calculate Daily Consumption",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "inputValueKey": "meterReadingDelta",
          "outputValueKey": "dailyConsumption",
          "mathFunction": "SUM",
          "aggIntervalType": "DAY",
          "timeZoneId": "UTC",
          "aggIntervalValue": 1,
          "aggIntervalTimeUnit": "HOURS",
          "intervalPersistencePolicy": "ON_EACH_MESSAGE",
          "intervalCheckValue": 1,
          "intervalCheckTimeUnit": "MINUTES",
          "statePersistencePolicy": "ON_EACH_CHANGE",
          "statePersistenceValue": 1,
          "statePersistenceTimeUnit": "MINUTES",
          "outMsgType": "POST_TELEMETRY_REQUEST",
          "autoCreateIntervals": false,
          "periodValue": 5,
          "periodTimeUnit": "MINUTES",
          "parentEntitiesQuery": {
            "type": "single",
            "entityId": {
              "entityType": "TENANT",
              "id": "e47343f0-5a68-11eb-a280-b979e84eaa51"
            }
          }
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 1349,
          "layoutY": 672
        }
      },
      {
        "type": "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode",
        "name": "Calculate Daily Consumption",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "inputValueKey": "meterReadingDelta",
          "outputValueKey": "dailyConsumption",
          "mathFunction": "SUM",
          "aggIntervalType": "DAY",
          "timeZoneId": "UTC",
          "aggIntervalValue": 1,
          "aggIntervalTimeUnit": "HOURS",
          "intervalPersistencePolicy": "ON_EACH_MESSAGE",
          "intervalCheckValue": 1,
          "intervalCheckTimeUnit": "MINUTES",
          "statePersistencePolicy": "ON_EACH_CHANGE",
          "statePersistenceValue": 1,
          "statePersistenceTimeUnit": "MINUTES",
          "outMsgType": "POST_TELEMETRY_REQUEST",
          "autoCreateIntervals": false,
          "periodValue": 5,
          "periodTimeUnit": "MINUTES",
          "parentEntitiesQuery": {
            "type": "group",
            "entityGroupId": {
              "entityType": "ENTITY_GROUP",
              "id": "e479ac90-5a68-11eb-a280-b979e84eaa51"
            }
          }
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 1337,
          "layoutY": 537
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "To Tenant",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "originatorSource": "TENANT",
          "relationsQuery": {
            "direction": "FROM",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "Contains",
                "entityTypes": []
              }
            ],
            "fetchLastLevelOnly": false
          },
          "preserveOriginatorIfCustomer": true
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 977,
          "layoutY": 503
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "To Customer",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "originatorSource": "CUSTOMER",
          "relationsQuery": {
            "direction": "FROM",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "Contains",
                "entityTypes": []
              }
            ],
            "fetchLastLevelOnly": false
          },
          "preserveOriginatorIfCustomer": true
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 981,
          "layoutY": 433
        }
      },
      {
        "type": "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode",
        "name": "Calculate Daily Consumption",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "inputValueKey": "Delta_c",
          "outputValueKey": "dailyConsumption",
          "mathFunction": "SUM",
          "aggIntervalType": "DAY",
          "timeZoneId": "UTC",
          "aggIntervalValue": 1,
          "aggIntervalTimeUnit": "HOURS",
          "intervalPersistencePolicy": "ON_EACH_MESSAGE",
          "outMsgType": "POST_TELEMETRY_REQUEST",
          "intervalCheckValue": 1,
          "intervalCheckTimeUnit": "MINUTES",
          "statePersistencePolicy": "ON_EACH_CHANGE",
          "statePersistenceValue": 1,
          "statePersistenceTimeUnit": "MINUTES",
          "autoCreateIntervals": false,
          "periodValue": 5,
          "periodTimeUnit": "MINUTES",
          "parentEntitiesQuery": {
            "type": "group",
            "entityGroupId": null
          }
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 517,
          "layoutY": 375
        }
      },
      {
        "type": "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode",
        "name": "Calculate Weekly Consumption",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 2,
        "configuration": {
          "inputValueKey": "Delta_c",
          "outputValueKey": "weeklyConsumption",
          "mathFunction": "SUM",
          "aggIntervalType": "WEEK",
          "timeZoneId": "UTC",
          "aggIntervalValue": 1,
          "aggIntervalTimeUnit": "HOURS",
          "intervalPersistencePolicy": "ON_EACH_MESSAGE",
          "outMsgType": "POST_TELEMETRY_REQUEST",
          "intervalCheckValue": 1,
          "intervalCheckTimeUnit": "MINUTES",
          "statePersistencePolicy": "ON_EACH_CHANGE",
          "statePersistenceValue": 1,
          "statePersistenceTimeUnit": "MINUTES",
          "autoCreateIntervals": false,
          "periodValue": 5,
          "periodTimeUnit": "MINUTES",
          "parentEntitiesQuery": {
            "type": "group",
            "entityGroupId": null
          }
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 514,
          "layoutY": 459
        }
      },
      {
        "type": "org.thingsboard.rule.engine.flow.TbRuleChainInputNode",
        "name": "Customer Alarm Routing",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "ruleChainId": "c33c0d50-8d1f-11ef-a8fb-e94af5e871ca",
          "forwardMsgToDefaultRuleChain": false
        },
        "additionalInfo": {
          "description": "Forwards message to the \"Water Metering Solution Customer Alarm Routing\" rule chain",
          "layoutX": 1232,
          "layoutY": 352
        }
      },
      {
        "type": "org.thingsboard.rule.engine.flow.TbRuleChainInputNode",
        "name": "Tenant Alarm Routing",
        "debugMode": false,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 1,
        "configuration": {
          "ruleChainId": "c335a4b0-8d1f-11ef-a8fb-e94af5e871ca",
          "forwardMsgToDefaultRuleChain": false
        },
        "additionalInfo": {
          "description": "Forwards message to the \"Water Metering Solution Tenant Alarm Routing\" rule chain",
          "layoutX": 1230,
          "layoutY": 280
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Calculate Consumption",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "// 根据 calculateFlag 的值计算 dailyConsumption\nvar Delta_c;\nif (msg.Calculate_flag === 0) {\n    Delta_c =msg.meterReadingDelta /\n        450;\n} else if (msg.Calculate_flag === 1) {\n    Delta_c =msg.meterReadingDelta /\n        390;\n} else if (msg.Calculate_flag ===\n    2) { // 添加了明确的 else if 来处理 \n    Delta_c = msg.meterReadingDelta/\n    64;\n} else {\n    // 可选：处理无效的 calculateFlag\n    return null; // 或者抛出异常\n}\n// 返回计算后的 dailyConsumption\nreturn [\n    {msg: {Delta_c: Delta_c}, metadata: metadata, msgType: msgType}\n    ];",
          "tbelScript": "\tfunction calculateAdjustedConsumption(calculateFlag, dailyConsumption) {\n    // 检查输入是否为有效的calculateFlag值\n    if (!Number.isInteger(calculateFlag) || calculateFlag < 0 || calculateFlag > 2) {\n        console.error(\"Invalid calculateFlag. Please provide a value between 0 and 2.\");\n        return null; // 或者您可以决定返回某个特定的错误值或进行其他错误处理\n    }\n \n    // 根据calculateFlag的值调整dailyConsumption\n    switch (calculateFlag) {\n        case 0:\n            return dailyConsumption / 450;\n        case 1:\n            return dailyConsumption / 390;\n        case 2:\n            return dailyConsumption / 64;\n        default:\n            // 理论上这个default分支不应该被执行，因为前面已经检查了calculateFlag的值\n            console.error(\"Unexpected error occurred.\");\n            return null; // 或者您可以决定返回某个特定的错误值\n    }\n}\n "
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 193,
          "layoutY": 379
        }
      },
      {
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Calculate all Consumption",
        "debugMode": true,
        "singletonMode": false,
        "queueName": null,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "JS",
          "jsScript": "// 根据 calculateFlag 的值计算 dailyConsumption\nvar cum;\nif (msg.Calculate_flag === 0) {\n    cum =msg.pulseCounter /\n        450;\n} else if (msg.Calculate_flag === 1) {\n    cum =msg.pulseCounter /\n        390;\n} else if (msg.Calculate_flag ===\n    2) { // 添加了明确的 else if 来处理 \n    cum = msg.pulseCounter/\n    64;\n} else {\n    // 可选：处理无效的 calculateFlag\n    return null; // 或者抛出异常\n}\n// 返回计算后的 dailyConsumption\nreturn [\n    {msg: {cum: cum}, metadata: metadata, msgType: msgType}\n    ];",
          "tbelScript": "\tfunction calculateAdjustedConsumption(calculateFlag, dailyConsumption) {\n    // 检查输入是否为有效的calculateFlag值\n    if (!Number.isInteger(calculateFlag) || calculateFlag < 0 || calculateFlag > 2) {\n        console.error(\"Invalid calculateFlag. Please provide a value between 0 and 2.\");\n        return null; // 或者您可以决定返回某个特定的错误值或进行其他错误处理\n    }\n \n    // 根据calculateFlag的值调整dailyConsumption\n    switch (calculateFlag) {\n        case 0:\n            return dailyConsumption / 450;\n        case 1:\n            return dailyConsumption / 390;\n        case 2:\n            return dailyConsumption / 64;\n        default:\n            // 理论上这个default分支不应该被执行，因为前面已经检查了calculateFlag的值\n            console.error(\"Unexpected error occurred.\");\n            return null; // 或者您可以决定返回某个特定的错误值\n    }\n}\n "
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 598,
          "layoutY": 58
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 2,
        "type": "Success"
      },
      {
        "fromIndex": 0,
        "toIndex": 14,
        "type": "Alarm Created"
      },
      {
        "fromIndex": 0,
        "toIndex": 15,
        "type": "Alarm Created"
      },
      {
        "fromIndex": 2,
        "toIndex": 1,
        "type": "RPC Request to Device"
      },
      {
        "fromIndex": 2,
        "toIndex": 3,
        "type": "Post attributes"
      },
      {
        "fromIndex": 2,
        "toIndex": 4,
        "type": "Post telemetry"
      },
      {
        "fromIndex": 5,
        "toIndex": 0,
        "type": "Other"
      },
      {
        "fromIndex": 5,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 16,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 17,
        "type": "Success"
      },
      {
        "fromIndex": 6,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 8,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 9,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 6,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 8,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 7,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 9,
        "type": "Success"
      },
      {
        "fromIndex": 12,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 12,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 13,
        "type": "Success"
      },
      {
        "fromIndex": 17,
        "toIndex": 0,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}